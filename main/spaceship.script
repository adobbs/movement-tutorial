function init(self)
	msg.post(".", "acquire_input_focus")
	self.velocity = vmath.vector3()
	self.input = vmath.vector3()
	self.maxSpeed = 200
	self.spriteWidth = go.get("#sprite", "size.x")
	self.spriteHeight = go.get("#sprite", "size.y")
	self.hasMoveTarget = false
	self.moveTargetX = nil
	self.moveTargetY = nil
end

function update(self, dt)
	local p = go.get_position()
	local wx, wy = window.get_size()

	if (self.hasMoveTarget) then
		if (self.moveTargetX > p.x + self.spriteWidth / 2) then
			self.input.x = 1
		elseif (self.moveTargetX < p.x - self.spriteWidth / 2) then
			self.input.x = -1
		elseif (self.moveTargetY > p.y + self.spriteHeight / 2) then
			self.input.y = 1
		elseif (self.moveTargetY < p.y - self.spriteHeight / 2) then
			self.input.y = -1
		end
	end
	
	if vmath.length_sqr(self.input) > 1 then
		self.input = vmath.normalize(self.input)
	end

	local acceleration = self.input * 200

	local dv = acceleration * dt
	local v0 = self.velocity
	local v1 = self.velocity + dv

	if (v1.x > self.maxSpeed) then
		v1.x = self.maxSpeed
	elseif (v1.x < -self.maxSpeed) then
		v1.x = -self.maxSpeed
	end

	if (v1.y > self.maxSpeed) then
		v1.y = self.maxSpeed
	elseif (v1.y < -self.maxSpeed) then
		v1.y = -self.maxSpeed
	end
	
	local movement = (v0 + v1) * dt * 0.5

	if (p.x >= wx - self.spriteWidth / 2) then
		p.x = wx - self.spriteWidth / 2 - 1
		v1.x = -v1.x
	elseif (p.x <= self.spriteWidth / 2) then
		p.x = self.spriteWidth / 2 + 1
		v1.x = -v1.x
	end

	if (p.y >= wy - self.spriteHeight / 2) then
		p.y = wy - self.spriteHeight / 2 - 1
		v1.y = -v1.y
	elseif (p.y <= self.spriteHeight / 2) then
		p.y = self.spriteHeight / 2 + 1
		v1.y = -v1.y
	end
	
	go.set_position(p + movement)
	
	self.velocity = v1
	self.input = vmath.vector3()
end

function on_input(self, action_id, action)	
	if action_id == hash("up") then
		self.input.y = 1
	elseif action_id == hash("down") then
		self.input.y = -1
	elseif action_id == hash("left") then
		self.input.x = -1
	elseif action_id == hash("right") then
		self.input.x = 1
	elseif action_id == hash("click") then
		if (action.pressed) then
			print("CLICK!")
			print(action.x, action.y)
			print(p)
			print(action.pressed)
			self.hasMoveTarget = true
			self.moveTargetX = action.x
			self.moveTargetY = action.y
		elseif (action.released) then
			self.hasMoveTarget = false
		end
	end
end